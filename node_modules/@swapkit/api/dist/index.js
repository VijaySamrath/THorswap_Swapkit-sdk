var _=Object.defineProperty;var T=(e,s)=>{for(var o in s)_(e,o,{get:s[o],enumerable:!0,configurable:!0,set:(r)=>s[o]=()=>r})};var B={};T(B,{getTNSChainAddress:()=>se,getTHORNamesByOwner:()=>ee,getTHORNamesByAddress:()=>re,getTHORNameDetails:()=>F,getTHORChainPools:()=>te,getLiquidityPositionsRaw:()=>$,getLiquidityPositions:()=>ne});import{AssetValue as b,BaseDecimal as N,RequestClient as f,SwapKitNumber as R} from"@swapkit/helpers";function F(e){return f.get(`${h}/thorname/lookup/${e}`)}function ee(e){return f.get(`${h}/thorname/owner/${e}`)}function re(e){return f.get(`${h}/thorname/address/${e}`)}function te(e){return f.get(`${h}/pools`,{searchParams:{period:e}})}function $(e){return f.get(`${h}/fullmember?address=${e.join(",")}`)}async function se({chain:e,tns:s}){return(await F(s))?.entries?.find((r)=>r.chain.toLowerCase()===e.toLowerCase())?.address}async function ne(e){return(await $(e)).map((o)=>({assetRegisteredAddress:o.assetAddress,asset:b.from({asset:o.pool,value:o.assetAdded,fromBaseDecimal:N.THOR}),assetPending:b.from({asset:o.pool,value:o.assetPending,fromBaseDecimal:N.THOR}),assetWithdrawn:b.from({asset:o.pool,value:o.assetWithdrawn,fromBaseDecimal:N.THOR}),runeRegisteredAddress:o.runeAddress,rune:b.from({asset:"THOR.RUNE",value:o.runeAdded,fromBaseDecimal:N.THOR}),runePending:b.from({asset:"THOR.RUNE",value:o.runePending,fromBaseDecimal:N.THOR}),runeWithdrawn:b.from({asset:"THOR.RUNE",value:o.runeWithdrawn,fromBaseDecimal:N.THOR}),poolShare:new R(o.sharedUnits).div(o.poolUnits),dateLastAdded:o.dateLastAdded,dateFirstAdded:o.dateFirstAdded}))}var h="https://mu.thorswap.net";import{AssetValue as m,BaseDecimal as i,Chain as g,RequestClient as D,SwapKitNumber as P} from"@swapkit/helpers";function M(e,s=!1){return D.get(`${s?V:G}/v2/borrower/${e}`)}function w(e,s=!1){return D.get(`${s?V:G}/v2/saver/${e}`)}function X(e,s){return D.get(`${s?V:G}/v2/member/${e}`)}async function oe(e,s=!1){return(await M(e,s)).pools.map((r)=>({collateral_deposited:m.from({asset:r.collateral_asset,value:r.collateral_deposited,fromBaseDecimal:i.THOR}),collateral_withdrawn:m.from({asset:r.collateral_asset,value:r.collateral_withdrawn,fromBaseDecimal:i.THOR}),debt_issued_tor:P.fromBigInt(BigInt(r.debt_issued_tor),i.THOR),debt_repaid_tor:P.fromBigInt(BigInt(r.debt_repaid_tor),i.THOR),last_open_loan_timestamp:r.last_open_loan_timestamp,last_repay_loan_timestamp:r.last_repay_loan_timestamp,target_assets:r.target_assets.map((p)=>m.from({asset:p}))}))}async function ae(e,s=!1){return(await w(e,s)).pools.map((r)=>({assetRegisteredAddress:r.assetAddress,assetAdded:m.from({asset:r.pool,value:r.assetAdded,fromBaseDecimal:i.THOR}),assetDeposit:m.from({asset:r.pool,value:r.assetDeposit,fromBaseDecimal:i.THOR}),assetRedeem:m.from({asset:r.pool,value:r.assetRedeem,fromBaseDecimal:i.THOR}),assetWithdrawn:m.from({asset:r.pool,value:r.assetWithdrawn,fromBaseDecimal:i.THOR}),dateLastAdded:r.dateLastAdded,dateFirstAdded:r.dateFirstAdded}))}async function ie(e,s=!1){return(await X(e,s)).pools.map((r)=>({assetRegisteredAddress:r.assetAddress,asset:m.from({asset:r.pool,value:r.assetAdded,fromBaseDecimal:i.THOR}),assetPending:m.from({asset:r.pool,value:r.assetPending,fromBaseDecimal:i.THOR}),assetWithdrawn:m.from({asset:r.pool,value:r.assetWithdrawn,fromBaseDecimal:i.THOR}),[`${s?"cacao":"rune"}RegisteredAddress`]:r.runeAddress,[`${s?"cacao":"rune"}`]:m.from({asset:"THOR.RUNE",value:r.runeAdded,fromBaseDecimal:i.THOR}),[`${s?"cacao":"rune"}Pending`]:m.from({asset:"THOR.RUNE",value:r.runePending,fromBaseDecimal:i.THOR}),[`${s?"cacao":"rune"}Withdrawn`]:m.from({asset:"THOR.RUNE",value:r.runeWithdrawn,fromBaseDecimal:i.THOR}),poolShare:new P(r.liquidityUnits).div(r.pool),dateLastAdded:r.dateLastAdded,dateFirstAdded:r.dateFirstAdded}))}var G="https://midgard.ninerealms.com",V="https://midgard.mayachain.info",q=(e)=>({getBorrowerDetail:(s)=>oe(s,e===g.Maya),getBorrowerDetailRaw:(s)=>M(s,e===g.Maya),getSaversDetail:(s)=>ae(s,e===g.Maya),getSaverDetailRaw:(s)=>w(s,e===g.Maya),getLiquidityPosition:(s)=>ie(s,e===g.Maya),getLiquidityPositionRaw:(s)=>X(s,e===g.Maya)}),Y=q(g.THORChain),E=q(g.Maya);var v={};T(v,{getThorchainQueue:()=>ue,getTNSPreferredAsset:()=>le,getTHORNodeTNSDetails:()=>W,getNodes:()=>Ae,getMimirInfo:()=>pe,getLastBlock:()=>de,getInboundAddresses:()=>ge});import{AssetValue as me,RequestClient as I} from"@swapkit/helpers";var L=function({type:e="thorchain",stagenet:s=!1}={}){switch(e){case"mayachain":return s?"https://stagenet.mayanode.mayachain.info/mayachain":"https://mayanode.mayachain.info/mayachain";default:return s?"https://stagenet-thornode.ninerealms.com/thorchain":"https://thornode.thorswap.net/thorchain"}};function de(e){return I.get(`${L(e)}/lastblock`)}function ue(e){return I.get(`${L(e)}/queue`)}function Ae(e){return I.get(`${L(e)}/nodes`)}function pe(e){return I.get(`${L(e)}/mimir`)}function ge(e){return I.get(`${L(e)}/inbound_addresses`)}function W(e){return I.get(`${L(e)}/thorname/${e.name}`)}async function le(e){const s=await W({name:e});if(!s.preferred_asset||s.preferred_asset===".")return;return me.from({asyncTokenLookup:!0,asset:s.preferred_asset})}var U={};T(U,{getTxnDetails:()=>Ce,getTokenListProviders:()=>Be,getSwapQuote:()=>He,getRepayQuote:()=>fe,getLoans:()=>ce,getLendingAssets:()=>he,getGasRates:()=>Se,getCachedPrices:()=>Le,getBorrowQuote:()=>Te,APIV1RequestClient:()=>c});import{RequestClient as H} from"@swapkit/helpers";import{z as l} from"zod";var be;((n)=>{n.SWAP_TC_TO_TC="SWAP:TC-TC";n.SWAP_ETH_TO_TC="SWAP:ERC20-TC";n.SWAP_TC_TO_ETH="SWAP:TC-ERC20";n.SWAP_ETH_TO_ETH="SWAP:ERC20-ERC20";n.SWAP_AVAX_TO_TC="SWAP:AVAX-TC";n.SWAP_TC_TO_AVAX="SWAP:TC-AVAX";n.SWAP_AVAX_TO_AVAX="SWAP:AVAX-AVAX";n.SWAP_ETH_TO_AVAX="SWAP:ETH-AVAX";n.SWAP_AVAX_TO_ETH="SWAP:AVAX-ETH";n.SWAP_TC_TO_GAIA="SWAP:TC-GAIA";n.SWAP_GAIA_TO_TC="SWAP:GAIA-TC";n.SWAP_TC_TO_BTC="SWAP:TC-BTC";n.SWAP_BTC_TO_TC="SWAP:BTC-TC";n.SWAP_TC_TO_BCH="SWAP:TC-BCH";n.SWAP_BCH_TO_TC="SWAP:BCH-TC";n.SWAP_TC_TO_LTC="SWAP:TC-LTC";n.SWAP_LTC_TO_TC="SWAP:LTC-TC";n.SWAP_TC_TO_DOGE="SWAP:TC-DOGE";n.SWAP_DOGE_TO_TC="SWAP:DOGE-TC";n.TC_STATUS="TC:STATUS";n.TC_TRANSFER="TC:TRANSFER";n.TC_DEPOSIT="TC:DEPOSIT";n.TC_SEND="TC:SEND";n.TC_SWITCH="TC:SWITCH";n.TC_LP_ADD="TC:ADDLIQUIDITY";n.TC_LP_WITHDRAW="TC:WITHDRAW";n.TC_TNS_CREATE="TC:TNS-CREATE";n.TC_TNS_EXTEND="TC:TNS-EXTEND";n.TC_TNS_UPDATE="TC:TNS-UPDATE";n.TC_SAVINGS_ADD="TC:ADDSAVINGS";n.TC_SAVINGS_WITHDRAW="TC:WITHDRAWSAVINGS";n.TC_LENDING_OPEN="TC:LENDINGOPEN";n.TC_LENDING_CLOSE="TC:LENDINGCLOSE";n.ETH_APPROVAL="ETH:APPROVAL";n.ETH_STATUS="ETH:STATUS";n.ETH_TRANSFER_TO_TC="ETH:TRANSFER:IN";n.ETH_TRANSFER_FROM_TC="ETH:TRANSFER:OUT";n.AVAX_APPROVAL="AVAX:APPROVAL";n.AVAX_STATUS="AVAX:STATUS";n.AVAX_TRANSFER_TO_TC="AVAX:TRANSFER:IN";n.AVAX_TRANSFER_FROM_TC="AVAX:TRANSFER:OUT";n.BSC_APPROVAL="BSC:APPROVAL";n.BSC_STATUS="BSC:STATUS";n.BSC_TRANSFER_TO_TC="BSC:TRANSFER:IN";n.BSC_TRANSFER_FROM_TC="BSC:TRANSFER:OUT";n.APPROVAL="APPROVAL";n.STATUS="STATUS";n.TRANSFER_TO_TC="TRANSFER:IN";n.TRANSFER_FROM_TC="TRANSFER:OUT";n.UNSUPPORTED="UNSUPPORTED";n.TC_LENDING="TC:LENDING"})(be||={});var Ne;((u)=>{u.PENDING="pending";u.SUCCESS="success";u.CANCELLED="cancelled";u.REFUNDED="refunded";u.REPLACED="replaced";u.ERROR="error";u.UNKNOWN="unknown";u.NOT_STARTED="not_started";u.NOT_FOUND="not_found";u.RETRIES_EXCEEDED="retries_exceeded";u.STREAMING="streaming"})(Ne||={});var Ie;((r)=>{r[r.NOT_STARTED=0]="NOT_STARTED";r[r.SUCCESS=1]="SUCCESS";r[r.REFUNDED=2]="REFUNDED"})(Ie||={});var K;((t)=>{t.INVALID_INPUT_PARAMETERS="1000";t.UNKNOWN_PROVIDERS="1001";t.CANNOT_FIND_INBOUND_ADDRESS="1002";t.NO_INBOUND_ADDRESSES="1003";t.CHAIN_HALTED_OR_UNSUPPORTED="1004";t.MISSING_INPUT_PARAMETER="1005";t.INVALID_TYPE_GENERIC="1100";t.INVALID_NUMBER_STRING="1101";t.INVALID_NUMBER="1102";t.INVALID_BOOLEAN="1103";t.INVALID_OBJECT="1104";t.INVALID_ARRAY="1105";t.SELL_AMOUNT_MUST_BE_POSITIVE_INTEGER="2000";t.SELL_BUY_ASSETS_ARE_THE_SAME="2001";t.MISSING_SOURCE_ADDRESS_FOR_SYNTH="2002";t.AFF_ADDRESS_AND_BPS_OR_NEITHER="2003";t.AFF_ADDRESS_TOO_LONG="2004";t.AFF_BPS_INTEGER_MAX_500="2005";t.SOURCE_ADDRESS_INVALID_FOR_SELL_CHAIN="2006";t.DESTINATION_ADDRESS_INVALID_FOR_BUY_CHAIN="2007";t.PREFERRED_PROVIDER_NOT_SUPPORTED="2008";t.DESTINATION_ADDRESS_SMART_CONTRACT="2009";t.BUY_AMOUNT_MUST_BE_POSITIVE_INTEGER="2010";t.SOURCE_ADDRESS_SMART_CONTRACT="2011";t.SWAP_AMOUNT_TOO_LOW="2012";t.INVALID_PROVIDER="2100";t.MISSING_CROSS_CHAIN_PROVIDER="2101";t.MISSING_AVAX_PROVIDER="2102";t.MISSING_BSC_PROVIDER="2103";t.MISSING_ETH_PROVIDER="2104";t.INVALID_PROVIDER_FOR_SWAP_OUT="2105";t.MISSING_ARB_PROVIDER="2106";t.INVALID_CHAIN="2200";t.INVALID_ASSET="2201";t.INVALID_ASSET_IDENTIFIER="2202";t.UNSUPPORTED_CHAIN="2204";t.UNSUPPORTED_ASSET="2203";t.UNSUPPORTED_ASSET_FOR_SWAPOUT="2205";t.INVALID_SOURCE_ADDRESS="2300";t.INVALID_DESTINATION_ADDRESS="2301";t.THORNODE_QUOTE_GENERIC_ERROR="3000";t.NOT_ENOUGH_SYNTH_BALANCE="3001";t.SYNTH_MINTING_CAP_REACHED="3002";t.INVALID_QUOTE_MODE="4000";t.NO_QUOTES="4001";t.SERVICE_UNAVAILABLE_GENERIC="5000";t.MISSING_GAS_DATA_GENERIC="5100";t.MISSING_TOKEN_INFO_GENERIC="5200";t.CANT_FIND_TOKEN_LIST="5201";t.NO_PRICE="5202";t.PRICE_IS_STALE="5203";t.ADDRESS_NOT_WHITELISTED="6000";t.ADDRESS_ALREADY_CLAIMED="6001";t.TEMPORARY_ERROR="9999"})(K||={});var Q;((a)=>{a.HEALTH_CONTROLLER="1000";a.LIQUIDITY_CONTROLLER="1001";a.PROVIDER_CONTROLLER="1002";a.QUOTE_CONTROLLER="1003";a.SWAP_CONTROLLER="1004";a.UTIL_CONTROLLER="1005";a.AIRDROP_CONTROLLER="1006";a.PROVIDER="2000";a.ASSET="2001";a.TOKEN_LIST="2002";a.QUOTE="2100";a.QUOTE_TXN_DETAILS="2101";a.THORCHAIN_PROVIDER="3000";a.UNISWAPV2_ETH_PROVIDER="3001";a.UNISWAPV3_ETH_PROVIDER="3002";a.SUSHISWAP_ETH_PROVIDER="3003";a.PANCAKESWAP_BSC_PROVIDER="3004";a.PANCAKESWAP_ETH_PROVIDER="3005";a.ONEINCH_ETH_PROVIDER="3006";a.ONEINCH_BSC_PROVIDER="3007";a.ONEINCH_AVAX_PROVIDER="3008";a.ZEROX_ETH_PROVIDER="3009";a.WOOFI_AVAX_PROVIDER="3010";a.PANGOLIN_AVAX_PROVIDER="3011";a.TRADERJOE_AVAX_PROVIDER="3012";a.KYBER_ETH_PROVIDER="3013";a.KYBER_AVAX_PROVIDER="3014";a.WOOFI_BSC_PROVIDER="3015";a.STARGATE_PROVIDER="3016";a.PROVIDER_UTIL="4000";a.TXN_DETAILS="5000";a.AIRDROP_UTIL="6000"})(Q||={});var j;((d)=>{d.VALIDATION_ERROR="VALIDATION_ERROR";d.REQUEST_PARAMETER_ERROR="REQUEST_PARAMETER_ERROR";d.RESPONSE_PARSING_ERROR="RESPONSE_PARSING_ERROR";d.UNSUPPORTED="UNSUPPORTED";d.NOT_IMPLEMENTED="NOT_IMPLEMENTED";d.INCOMPATIBLE_ASSETS_OPERATIONS="INCOMPATIBLE_ASSETS_OPERATIONS";d.SERVICE_UNAVAILABLE="SERVICE_UNAVAILABLE";d.DOWN_FOR_MAINTENANCE="DOWN_FOR_MAINTENANCE";d.MISSING_INBOUND_INFO="MISSING_INBOUND_INFO";d.QUOTE_FETCHING_ERROR="QUOTE_FETCHING_ERROR";d.AIRDROP_ERROR="AIRDROP_ERROR";d.UNHANDLED_ERROR="UNHANDLED_ERROR"})(j||={});var J=l.object({status:l.number(),type:l.nativeEnum(j),code:l.nativeEnum(K),module:l.nativeEnum(Q),complete:l.string(),identifier:l.string(),message:l.string()});function Le({tokens:e,...s}){const o=new URLSearchParams,r=e.filter((p,Z,O)=>O.findIndex((z)=>z===p)===Z);for(let p of r)o.append("tokens",JSON.stringify(p));if(s.metadata)o.append("metadata","true");if(s.lookup)o.append("lookup","true");if(s.sparkline)o.append("sparkline","true");return c.post(`${A}/tokenlist/cached-price`,{body:o.toString(),headers:{"Content-Type":"application/x-www-form-urlencoded"}})}function He(e){return c.get(`${A}/aggregator/tokens/quote`,{searchParams:e})}function Te(e){return c.get(`${A}/aggregator/lending/borrow`,{searchParams:e})}function fe(e){return c.get(`${A}/aggregator/lending/repay`,{searchParams:e})}function he(){return H.get(`${A}/aggregator/lending/assets`)}function ce(e){return H.get(`${A}/aggregator/lending/loans`,{searchParams:e})}function Se(){return H.get(`${A}/resource-worker/gasPrice/getAll`)}function Ce(e){return H.get(`${A}/apiusage/v2/txn`,{searchParams:{txHash:e}})}function Be(){return H.get(`${A}/tokenlist/providers`)}var A="https://api.thorswap.finance",c=H.extend({hooks:{afterResponse:[async(e,s,o)=>{const r=await o.json();try{const p=J.parse(r);return new Response(JSON.stringify(p),{status:200})}catch(p){return r}}]}});var y={};T(y,{getTrackerDetails:()=>Ve,getTokenListV2:()=>ye,getTokenListProvidersV2:()=>Ue,getSwapQuoteV2:()=>ve});import{QuoteResponseSchema as Pe,RequestClient as S,SwapKitError as De} from"@swapkit/helpers";function Ve(e){return S.post(`${C}/track`,{body:JSON.stringify(e)})}async function ve(e,s=!1){const o=await S.post(`${s?Ge:C}/quote`,{json:e});try{return Pe.parse(o)}catch(r){throw new De("api_v2_invalid_response",r)}}async function Ue(){return await S.get(`${C}/providers`)}function ye(e){return S.get(`${C}/tokens?provider=${e}`)}var C="https://api.swapkit.dev",Ge="https://dev-api.swapkit.dev";var k={};T(k,{getTokenList:()=>$e,getLogoForAsset:()=>Me,getChainLogoForAsset:()=>we});import{AssetValue as xe,RequestClient as ke,getChainIdentifier as Fe} from"@swapkit/helpers";function $e(e){return ke.get(`${x}/token-list/${e}.json`)}function Me(e){return`${x}/token-list/images/${e.toLowerCase()}.png`}function we(e){const{chain:s}=xe.from({asset:e}),o=Fe(s).toLowerCase();return`${x}/token-list/images/${o}.png`}var x="https://static.thorswap.net";var _e={...B,...v,...U,...y,...k,thorchainMidgard:Y,mayachainMidgard:E};export{Ne as TxStatus,be as TransactionType,_e as SwapKitApi,Ie as StreamingSwapProgressStatus,j as ERROR_TYPE,Q as ERROR_MODULE,K as ERROR_CODE,J as ApiV1ErrorSchema};

//# debugId=2317FC80B9EF968164756E2164756E21
